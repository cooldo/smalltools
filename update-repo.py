#!/usr/bin/env python3

# https://www.cnblogs.com/mululu/p/9284081.html
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
#from selenium.webdriver.common.keys import keys
import pyperclip
import time

filename = r'C:\Users\samsung\Desktop\input.txt'
cherry_pick_list = []

browser = webdriver.Firefox()

browser.implicitly_wait(50)
# initialization
browser.get("http://12.36.165.35:8084/#/dashboard/self")
time.sleep(10)

# dict content: [ direcotry needed to cherry-pick , how to go out of the current directory, git commit id needed to reset ]
dict = { \
'meta-qt-source/center-console':\
['../../', 'asdfasfdasfd'], \
\
'meta-qt-source/discovery-hud':\
['../../','asdfasdf'],\
\
'meta-qt-source/rse-demo':\
['../../','asdfasdf'],\
\
'meta-qt-source/kria-cluster-2d':\
['../../','asdfasdf'], \
\
'discovery-qtappman':\
['../','asdfasdf'], \
\
'meta-samsung-discovery-baremetal':\
['../','asdfasdfasfd'] \
}

with open(filename, 'r') as f:
	for line in f:
		url = line
		driver = browser.get(url)
		time.sleep(2)
		# get repo name
		repo_abs = browser.find_element_by_xpath("/html/body/div[3]/div/div/div/div/div/table/tbody/tr/td[2]/table[1]/tbody/tr[6]/td/a[1]").text	
		repo = repo_abs.split('/')[-1]
		time.sleep(2)
		# click download button
		browser.find_elements_by_class_name("com-google-gerrit-client-change-ChangeScreen_BinderImpl_GenCss_style-popdown button")[2].click()
		time.sleep(2)
		# click copy button
		browser.find_elements_by_class_name("com-google-gwtexpui-clippy-client-ClippyCss-copier")[4].click()
		time.sleep(2)
		# paste to a list
		cherry_pick_addr = pyperclip.paste()
		for key in dict:
			if repo in key:
				dict[key].append(cherry_pick_addr)


with open('update-repo.sh', 'w') as f:
	f.write('#!/bin/bash\n')
	f.write('#THIS FILE IS AUTOMATICALLY GENERATED by qiang1.gao, DON\'T MODIFY IT UNLESS YOU HAVE ENOUGH CONFIDENCE\n')
	f.write('set -e\n')

	for key in dict:
		LEN = len(dict[key])
		if LEN > 2:
			# 1.change to the specific directory
			f.write('cd ')
			f.write(key)
			f.write('\n')
			# 2.git reset --hard to the orignal commit
			f.write('git reset --hard ')
			f.write(dict[key][1])
			f.write('\n')
			# 3.git cherry-pick each of new commit
			for i in range(2,LEN):
				f.write(dict[key][i])
				f.write('\n')
			f.write('cd ')
			f.write(dict[key][0])
			f.write('\n')

